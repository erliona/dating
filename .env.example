# Копируйте этот файл в .env и отредактируйте значения перед запуском.
BOT_TOKEN=replace-with-real-telegram-token
WEBAPP_URL=http://localhost:8080
WEBAPP_PORT=8080

# Настройки PostgreSQL для docker-compose.yml
POSTGRES_DB=dating
POSTGRES_USER=dating
POSTGRES_PASSWORD=dating
POSTGRES_PORT=5432

# Установите в false, если не хотите выполнять alembic upgrade при старте контейнера бота.
# RUN_DB_MIGRATIONS=true

# ВАЖНО: При запуске вне Docker Compose раскомментируйте BOT_DATABASE_URL.
# Значения user, password, host и dating должны совпадать с вашей PostgreSQL.
# В Docker Compose эта переменная формируется автоматически из POSTGRES_* переменных выше.
# 
# Примеры:
# - Локальный PostgreSQL: BOT_DATABASE_URL=postgresql+asyncpg://dating:dating@localhost:5432/dating
# - Удалённый сервер: BOT_DATABASE_URL=postgresql+asyncpg://myuser:mypass@db.example.com:5432/dating
#
# ВНИМАНИЕ: Пользователь, пароль и база данных должны существовать в PostgreSQL!
# Если вы получаете ошибку "password authentication failed", проверьте:
# 1. Пользователь создан: CREATE USER dating WITH PASSWORD 'dating';
# 2. База данных создана: CREATE DATABASE dating OWNER dating;
# 3. Пароль в строке подключения совпадает с паролем в PostgreSQL
# BOT_DATABASE_URL=postgresql+asyncpg://dating:dating@localhost:5432/dating
