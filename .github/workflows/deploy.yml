name: Deploy

on:
  workflow_dispatch:
  push:
    branches: [ main ]

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    env:
      KEY_PATH: ${{ github.workspace }}/.ssh/ci_key

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # Пишем приватный ключ из секрета в файл (исправляем CRLF, даём читаемые права)
      - name: Prepare SSH key
        run: |
          mkdir -p "$GITHUB_WORKSPACE/.ssh"
          printf "%s" "${{ secrets.DEPLOY_SSH_KEY }}" > "$KEY_PATH"
          # на случай, если в секрете CRLF
          sed -i 's/\r$//' "$KEY_PATH"
          # appleboy-контейнеру нужно чтение из workspace → 0644
          chmod 644 "$KEY_PATH"
          head -n1 "$KEY_PATH" | sed 's/.\{20\}$/.../'  # маленькая проверка заголовка

      - name: Test SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key_path: ${{ env.KEY_PATH }}
          # при желании можно закрепить хост по отпечатку:
          # fingerprint: ${{ secrets.SSH_HOST_FINGERPRINT }}
          script: 'whoami'

      - name: Prepare deploy directory
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key_path: ${{ env.KEY_PATH }}
          script: |
            set -euo pipefail
            sudo mkdir -p "${{ secrets.DEPLOY_PATH }}"
            sudo chown -R "${USER}:${USER}" "${{ secrets.DEPLOY_PATH }}"

      - name: Upload application bundle
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key_path: ${{ env.KEY_PATH }}
          source: "."
          target: ${{ secrets.DEPLOY_PATH }}
          overwrite: true

      - name: Write .env and compose up
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key_path: ${{ env.KEY_PATH }}
          script: |
            set -euo pipefail
            cd "${{ secrets.DEPLOY_PATH }}"
            cat > .env <<'EOF'
            ${{ secrets.ENV_FILE }}
            EOF
            chmod 600 .env
            sudo docker compose up -d --build
            sudo docker compose ps
