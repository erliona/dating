name: Docker Build

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

concurrency:
  group: docker-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-services:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        service:
          - name: auth-service
            dockerfile: services/auth/Dockerfile
          - name: profile-service
            dockerfile: services/profile/Dockerfile
          - name: discovery-service
            dockerfile: services/discovery/Dockerfile
          - name: media-service
            dockerfile: services/media/Dockerfile
          - name: chat-service
            dockerfile: services/chat/Dockerfile
          - name: api-gateway
            dockerfile: gateway/Dockerfile
          - name: telegram-bot
            dockerfile: Dockerfile

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build ${{ matrix.service.name }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.service.dockerfile }}
          push: false
          tags: ${{ matrix.service.name }}:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build summary
        run: |
          echo "✅ ${{ matrix.service.name }} built successfully"

  validate-compose:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate docker-compose.yml
        run: |
          docker compose config > /dev/null
          echo "✅ docker-compose.yml is valid"

      - name: Check for required services
        run: |
          services=$(docker compose config --services)
          echo "Found services:"
          echo "$services"
          
          required_services="db auth-service profile-service discovery-service media-service chat-service api-gateway telegram-bot"
          
          for service in $required_services; do
            if echo "$services" | grep -q "^${service}$"; then
              echo "✅ $service found"
            else
              echo "❌ $service NOT found"
              exit 1
            fi
          done

      - name: Validation summary
        run: |
          echo "## Docker Compose Validation" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ All configurations are valid" >> $GITHUB_STEP_SUMMARY
